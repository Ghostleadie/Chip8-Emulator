# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake on multiple platforms
permissions:
  contents: read
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl
    steps:
      - uses: actions/checkout@v4
      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y libx11-dev libxrandr-dev libxinerama-dev libxcursor-dev libgl1-mesa-dev libxi-dev gtk+3-dev
      - name: Cache CMake
        uses: actions/cache@v4
        with:
          path: build
          key: ${{ runner.os }}-cmake-${{ hashFiles('**/CMakeLists.txt') }}
      - name: Configure CMake
        run: >
          cmake -B build
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S .
      - name: Build
        run: cmake --build build --config ${{ matrix.build_type }}
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Chip8-Emulator-${{ matrix.os }}-${{ matrix.c_compiler }}
          path: build/

  test:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: ${{ fromJson('{"os":["ubuntu-latest","windows-latest"],"build_type":["Release"],"c_compiler":["gcc","clang","cl"],"include":[{"os":"windows-latest","c_compiler":"cl","cpp_compiler":"cl"},{"os":"ubuntu-latest","c_compiler":"gcc","cpp_compiler":"g++"},{"os":"ubuntu-latest","c_compiler":"clang","cpp_compiler":"clang++"}],"exclude":[{"os":"windows-latest","c_compiler":"gcc"},{"os":"windows-latest","c_compiler":"clang"},{"os":"ubuntu-latest","c_compiler":"cl"}]}') }}
    steps:
      - uses: actions/checkout@v4
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: Chip8-Emulator-${{ matrix.os }}-${{ matrix.c_compiler }}
          path: build/
      - name: Test
        working-directory: build
        run: ctest --build-config ${{ matrix.build_type }}
